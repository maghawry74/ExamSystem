// <auto-generated />
using System;
using ExamSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamSystem.Migrations
{
    [DbContext(typeof(ExamSystemContext))]
    partial class ExamSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepartmentCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.HasKey("CourseId", "DepartmentId")
                        .HasName("DepartmentCourses_PK");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DepartmentCourses", (string)null);
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("ExamID");

                    b.HasKey("QuestionId", "ExamId")
                        .HasName("ExamQuestions_PK");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamQuestions", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.Answer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<string>("QuestionAnswer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QuestionId", "QuestionAnswer")
                        .HasName("PrimaryKey");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__C92D7187959CD6B2");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.CourseToic", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("TopicId")
                        .HasName("PK__CourseTo__022E0F5D1A05C68B");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseToic", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BED57225AF8");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.HasKey("ExamId")
                        .HasName("PK__Exam__297521A768A21B7C");

                    b.HasIndex("CourseId");

                    b.ToTable("Exam", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("ModelAnswer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06FAC1E318558");

                    b.HasIndex("CourseId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.StudentExam", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("ExamID");

                    b.Property<string>("StudentId")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("StudentID")
                        .IsFixedLength();

                    b.Property<int?>("StudentGrade")
                        .HasColumnType("int");

                    b.HasKey("ExamId", "StudentId")
                        .HasName("StudentExams_PK");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExams");
                });

            modelBuilder.Entity("ExamSystem.Models.StudentExamAnswer", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .IsFixedLength();

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ExamId", "StudentId", "QuestionId")
                        .HasName("PK");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExamAnswer", (string)null);
                });

            modelBuilder.Entity("ExamSystem.Models.User", b =>
                {
                    b.Property<string>("Ssn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("SSN")
                        .IsFixedLength();

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Ssn")
                        .HasName("PK__Users__CA1E8E3DE84BF71F");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamSystem.Models.ViewModels.InstructorExamViewModel", b =>
                {
                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.ToTable("getInstructorExams", (string)null);
                });

            modelBuilder.Entity("InstructorCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("InstructorId")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("InstructorID")
                        .IsFixedLength();

                    b.HasKey("CourseId", "InstructorId")
                        .HasName("InstructorCourses_PK");

                    b.HasIndex("InstructorId");

                    b.ToTable("InstructorCourses", (string)null);
                });

            modelBuilder.Entity("StudentCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("StudentId")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasColumnName("StudentID")
                        .IsFixedLength();

                    b.HasKey("CourseId", "StudentId")
                        .HasName("StudentCourses_PK");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses", (string)null);
                });

            modelBuilder.Entity("DepartmentCourse", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Departmen__Cours__5812160E");

                    b.HasOne("ExamSystem.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Departmen__Depar__59063A47");
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.HasOne("ExamSystem.Models.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ExamQuest__ExamI__4222D4EF");

                    b.HasOne("ExamSystem.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__ExamQuest__Quest__412EB0B6");
                });

            modelBuilder.Entity("ExamSystem.Models.Answer", b =>
                {
                    b.HasOne("ExamSystem.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("ForeginKey");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamSystem.Models.CourseToic", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", "Course")
                        .WithMany("CourseToics")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__CourseToi__Cours__1DB06A4F");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ExamSystem.Models.Exam", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", "Course")
                        .WithMany("Exams")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Exam__CourseID__3E52440B");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ExamSystem.Models.Question", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", "Course")
                        .WithMany("Questions")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Question_Course");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ExamSystem.Models.StudentExam", b =>
                {
                    b.HasOne("ExamSystem.Models.Exam", "Exam")
                        .WithMany("StudentExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentEx__ExamI__4CA06362");

                    b.HasOne("ExamSystem.Models.User", "Student")
                        .WithMany("StudentExams")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentEx__Stude__4D94879B");

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamSystem.Models.StudentExamAnswer", b =>
                {
                    b.HasOne("ExamSystem.Models.Exam", "Exam")
                        .WithMany("StudentExamAnswers")
                        .HasForeignKey("ExamId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentEx__ExamI__18EBB532");

                    b.HasOne("ExamSystem.Models.Question", "Question")
                        .WithMany("StudentExamAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentEx__Quest__1AD3FDA4");

                    b.HasOne("ExamSystem.Models.User", "Student")
                        .WithMany("StudentExamAnswers")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentEx__Stude__19DFD96B");

                    b.Navigation("Exam");

                    b.Navigation("Question");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamSystem.Models.User", b =>
                {
                    b.HasOne("ExamSystem.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Users__Departmen__46E78A0C");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("InstructorCourse", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Instructo__Cours__5441852A");

                    b.HasOne("ExamSystem.Models.User", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Instructo__Instr__5535A963");
                });

            modelBuilder.Entity("StudentCourse", b =>
                {
                    b.HasOne("ExamSystem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentCo__Cours__5070F446");

                    b.HasOne("ExamSystem.Models.User", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentCo__Stude__5165187F");
                });

            modelBuilder.Entity("ExamSystem.Models.Course", b =>
                {
                    b.Navigation("CourseToics");

                    b.Navigation("Exams");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamSystem.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExamSystem.Models.Exam", b =>
                {
                    b.Navigation("StudentExamAnswers");

                    b.Navigation("StudentExams");
                });

            modelBuilder.Entity("ExamSystem.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("StudentExamAnswers");
                });

            modelBuilder.Entity("ExamSystem.Models.User", b =>
                {
                    b.Navigation("StudentExamAnswers");

                    b.Navigation("StudentExams");
                });
#pragma warning restore 612, 618
        }
    }
}
